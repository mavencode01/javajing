#+BEGIN_HTML
---
layout: post
title: Unit Testing with Spring
tags: [spring, unit test, junit]
excerpt: How to write a Junit test that uses Beans defined inside Spring Context
---
#+END_HTML
* Steps

- Create Simple Example Junit Test without spring
- Add spring dependencies

Add Dependency on spring-beans and spring-context: 

#+SRC_BEGIN
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>3.1.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>3.1.1.RELEASE</version>
    </dependency>
#+SRC_END

Add Dependency on spring-test: 

#+SRC_BEGIN
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>3.1.1.RELEASE</version>
      <scope>test</scope>
    </dependency>
#+SRC_END

Optionally, configure so that slf4j is used instead of java commons logging:

#+SRC_BEGIN
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.6.1</version>
      <scope>runtime</scope>
    </dependency>
#+SRC_END

- Add spring applicationContext.xml

- Update Junit test to run using the spring application context

#+SRC_BEGIN
@RunWith(value = SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:META-INF/simplebean-context.xml"})
#+SRC_END

* Links

Spring Testing Documentation
http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/testing.html


  
